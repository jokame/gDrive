PROCEDURE "GDRIVE"."gDrive.Classifier::Classify" (IN Tokens GDRIVE."gDrive.Definition::Tokenizer", OUT ResultsDefined GDRIVE."gDrive.Definition::ClassificationResults") 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	AS
BEGIN
DECLARE W INTEGER := 0;
/*****************************  
	Write your procedure logic 
 *****************************/
Clasif = SELECT DOCPROB.ROW_ID, DOCPROB.CLASS, DOCPROB.PROB+CATPROBS.PROBABILITY_LN AS PROB FROM (SELECT ROW_ID, BASE_ID, CLASS, SUM(PROBABILITY_LN) AS PROB FROM (SELECT TRAIN.ROW_ID,TRAIN.BASE_ID, FEAT.CLASS, TRAIN.FEATURE, FEAT.PROBABILITY_LN FROM :Tokens
 as TRAIN INNER JOIN "GDRIVE"."gDrive.Definition::Features" as FEAT ON TRAIN.BASE_ID=FEAT.BASE_ID AND  TRAIN.FEATURE=FEAT.FEATURE
 ) GROUP BY ROW_ID,BASE_ID, CLASS) AS DOCPROB INNER JOIN "GDRIVE"."gDrive.Definition::ClassProbabilities" AS CATPROBS 
 ON DOCPROB.BASE_ID=CATPROBS.BASE_ID AND DOCPROB.CLASS = CATPROBS.CLASS;
 Winners = SELECT ROW_ID, MAX(PROB) AS PROB FROM :Clasif GROUP BY ROW_ID;
 AllResults = SELECT C.ROW_ID, C.CLASS, W.PROB FROM :Winners as W INNER JOIN :Clasif as C ON W.PROB = C.PROB AND W.ROW_ID = C.ROW_ID ORDER BY C.ROW_ID DESC;
 Undefined = SELECT ROW_ID, COUNT(*) AS CUENTA FROM :AllResults GROUP BY ROW_ID HAVING COUNT(*)!=1 ;
 ResultsDefined = SELECT ROW_ID,CLASS FROM :AllResults WHERE ROW_ID NOT IN (SELECT ROW_ID FROM :Undefined);
 SELECT COUNT(*) INTO W FROM :Winners;
END;