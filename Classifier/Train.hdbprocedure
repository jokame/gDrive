PROCEDURE "GDRIVE"."gDrive.Classifier::Train" () 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	AS
BEGIN 
DECLARE WEIGHT DOUBLE := 1;
DECLARE PROBI DOUBLE := 0.5;
ClassTotals =SELECT BASE_ID, CLASS, COUNT(*) AS CLASS_TOTAL FROM (SELECT DISTINCT ROW_ID,BASE_ID, CLASS FROM "GDRIVE"."gDrive.Definition::Training_base_tokens") GROUP BY BASE_ID, CLASS;
BaseTotals = SELECT BASE_ID, SUM(CLASS_TOTAL) AS TOTAL FROM :ClassTotals GROUP BY BASE_ID;
Weights = SELECT DISTINCT BASE_ID, FEATURE,1 AS WEIGHT FROM "GDRIVE"."gDrive.Definition::Training_base_tokens";
FeaturesTotals = SELECT BASE_ID, FEATURE, COUNT(*) AS COUNT_TOTAL FROM "GDRIVE"."gDrive.Definition::Training_base_tokens" GROUP BY BASE_ID, FEATURE;
FeaturesByClassCount = SELECT BASE_ID, FEATURE, CLASS, COUNT(*) AS COUNT_CLASS FROM "GDRIVE"."gDrive.Definition::Training_base_tokens" GROUP BY BASE_ID, FEATURE, CLASS;
FeaturesByClassCombs = SELECT FEATS.BASE_ID, FEATS.FEATURE, CLASSES.CLASS FROM (SELECT DISTINCT BASE_ID, CLASS FROM "GDRIVE"."gDrive.Definition::Training_base_tokens") AS CLASSES INNER JOIN (SELECT DISTINCT BASE_ID, FEATURE FROM "GDRIVE"."gDrive.Definition::Training_base_tokens") AS FEATS ON CLASSES.BASE_ID = FEATS.BASE_ID;
FeaturesByClass = SELECT COMBS.BASE_ID, COMBS.FEATURE, COMBS.CLASS, 0 + (CASE  WHEN COUNTS.COUNT_CLASS IS NOT NULL THEN COUNTS.COUNT_CLASS ELSE 0 END) AS COUNT_CLASS FROM :FeaturesByClassCombs AS COMBS LEFT JOIN :FeaturesByClassCount AS COUNTS ON COMBS.BASE_ID=COUNTS.BASE_ID AND COMBS.FEATURE=COUNTS.FEATURE AND COMBS.CLASS=COUNTS.CLASS;

Results = SELECT BYCLASS.BASE_ID, BYCLASS.FEATURE, BYCLASS.CLASS, BYCLASS.COUNT_CLASS, TOTALS.COUNT_TOTAL, CLASSTOTALS.CLASS_TOTAL, WEIGHTS.WEIGHT,
 
--(((BYCLASS.COUNT_CLASS * TOTALS.COUNT_TOTAL) / CLASSTOTALS.CLASS_TOTAL + 0.5 + 1) / (TOTALS.COUNT_TOTAL + 1)) AS PROB

((BYCLASS.COUNT_CLASS / CLASSTOTALS.CLASS_TOTAL) * TOTALS.COUNT_TOTAL + WEIGHTS.WEIGHT * :PROBI) / (TOTALS.COUNT_TOTAL * WEIGHTS.WEIGHT) AS PERTENENCE_PROBABILITY

FROM :FeaturesByClass AS BYCLASS INNER JOIN :FeaturesTotals AS TOTALS ON BYCLASS.BASE_ID=TOTALS.BASE_ID AND BYCLASS.FEATURE=TOTALS.FEATURE INNER JOIN :ClassTotals AS CLASSTOTALS  ON BYCLASS.BASE_ID=CLASSTOTALS.BASE_ID AND BYCLASS.CLASS = CLASSTOTALS.CLASS INNER JOIN :Weights as WEIGHTS ON BYCLASS.BASE_ID = WEIGHTS.BASE_ID AND BYCLASS.FEATURE = WEIGHTS.FEATURE ORDER BY FEATURE ASC;
ClassProbabilities = SELECT CLASS.BASE_ID,CLASS.CLASS,CLASS.CLASS_TOTAL / BASE.TOTAL AS PROBABILITY, LN(CLASS.CLASS_TOTAL / BASE.TOTAL) AS PROBABILITY_LN FROM :ClassTotals as CLASS INNER JOIN :BaseTotals AS BASE ON CLASS.BASE_ID = BASE.BASE_ID;

UPSERT "GDRIVE"."gDrive.Definition::ClassProbabilities" SELECT * FROM :ClassProbabilities; 
UPSERT "GDRIVE"."gDrive.Definition::Features" SELECT BASE_ID, CLASS, FEATURE, PERTENENCE_PROBABILITY, LN(PERTENENCE_PROBABILITY) AS PROBABILITY_LN, WEIGHT FROM :Results; 
--SELECT * FROM :Results; 
END;